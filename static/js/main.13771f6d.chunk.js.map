{"version":3,"sources":["ContactForm/ContactForm.module.css","ContactList/ContactList.module.css","Filter/Filter.module.css","Button/Button.module.css","Button/Button.jsx","ContactList/ContactList.jsx","Filter/Filter.jsx","ContactForm/ContactForm.jsx","App.js","index.js"],"names":["module","exports","Button","type","handleClick","buttonName","className","css","button","onClick","ContactList","this","props","contactList","handleRemove","list","map","id","name","number","item","React","Component","Filter","onChange","label","htmlFor","uuidv4","input","required","ContactForm","state","handleChange","target","value","setState","onSubmit","e","preventDefault","handleSubmit","reset","form","pattern","title","App","contacts","filter","addContact","contact","sameName","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","contactName","alert","visibleContacts","react","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13771f6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1oYiB\",\"input\":\"ContactForm_input__2vujG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__oN9rA\",\"item\":\"ContactList_item__1-goh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__39Fbu\",\"input\":\"Filter_input__2T6Zi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__Yowqt\"};","import css from '../Button/Button.module.css';\n\nfunction Button({ type, handleClick, buttonName }) {\n  return (\n    <button type={type} className={css.button} onClick={handleClick}>\n      {buttonName}\n    </button>\n  );\n}\n\nexport { Button };\n","import React from 'react';\n// import PropTypes from \"prop-types\";\nimport css from './ContactList.module.css';\nimport { Button } from '../Button/Button';\n\nclass ContactList extends React.Component {\n  render() {\n    const { contactList, handleRemove } = this.props;\n    return (\n      <ul className={css.list}>\n        {contactList.map(({ id, name, number }) => {\n          return (\n            <li className={css.item} key={id}>\n              <p>\n                {name}: {number}{' '}\n              </p>\n              <Button\n                type=\"button\"\n                handleClick={() => handleRemove(id)}\n                buttonName=\"Delete\"\n              />\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n// ContactList.propTypes = {\n//   contactList: PropTypes.func,\n//   handleRemove: PropTypes.func,\n// };\n\nexport { ContactList };\n","import { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport css from './Filter.module.css';\n\nfunction Filter({ onChange }) {\n  return (\n    <label className={css.label} htmlFor={uuidv4()}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        onChange={onChange}\n        name=\"filter\"\n        required\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n};\n\nexport { Filter };\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Button } from '../Button/Button';\nimport css from '../ContactForm/ContactForm.module.css';\n\nclass ContactForm extends React.Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.handleSubmit({ ...this.state, id: uuidv4() });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { onSubmit, handleChange } = this;\n    return (\n      <form className={css.form} onSubmit={onSubmit}>\n        <label htmlFor={uuidv4()}>\n          Name\n          <input\n            className={css.input}\n            type=\"text\"\n            onChange={handleChange}\n            name=\"name\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label htmlFor={uuidv4()}>\n          Number\n          <input\n            className={css.input}\n            type=\"tel\"\n            onChange={handleChange}\n            name=\"number\"\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <Button type=\"submit\" buttonName=\"Add contact\" />\n      </form>\n    );\n  }\n}\n\nexport { ContactForm };\n","import react from 'react';\nimport { ContactList } from './ContactList/ContactList';\nimport { Filter } from './Filter/Filter';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport './App.css';\n\nclass App extends react.Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = contact => {\n    if (this.sameName(contact)) {\n      return;\n    } else {\n      this.setState(prevState => ({\n        contacts: [contact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  handleRemove = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(normalizedFilter);\n    });\n  };\n\n  sameName = contactName => {\n    const { contacts } = this.state;\n    contacts.map(contact => {\n      if (contact.name === contactName.name) {\n        alert(`${contactName.name} is already in contacts`);\n      }\n      return contact;\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div className=\"container\">\n        <h1 className=\"mainTitle\">Phonebook</h1>\n        <ContactForm handleSubmit={this.addContact} />\n        <h2 className=\"contactsTitle\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contactList={visibleContacts}\n          handleRemove={this.handleRemove}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}